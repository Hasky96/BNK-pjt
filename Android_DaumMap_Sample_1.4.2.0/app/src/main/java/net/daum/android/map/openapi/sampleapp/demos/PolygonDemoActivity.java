package net.daum.android.map.openapi.sampleapp.demos;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

import net.daum.android.map.openapi.sampleapp.MapApiConst;
import net.daum.android.map.openapi.sampleapp.R;
import net.daum.mf.map.api.CameraUpdateFactory;
import net.daum.mf.map.api.MapCircle;
import net.daum.mf.map.api.MapPOIItem;
import net.daum.mf.map.api.MapPoint;
import net.daum.mf.map.api.MapPointBounds;
import net.daum.mf.map.api.MapPolyline;
import net.daum.mf.map.api.MapView;

import java.util.ArrayList;
import java.util.List;

public class PolygonDemoActivity extends FragmentActivity implements MapView.MapViewEventListener {

    private static final int MENU_ADD_POLYLINE1 = Menu.FIRST;
    private static final int MENU_ADD_POLYLINE2 = Menu.FIRST + 1;
    private static final int MENU_REMOVE_POLYLINES = Menu.FIRST + 2;
    private static final int MENU_ADD_CIRCLES = Menu.FIRST + 3;
    private static final int MENU_REMOVE_CIRCLE = Menu.FIRST + 4;

    private MapView mMapView;
    private MapPoint[] mPolyline2Points;
    private boolean isMapViewInitialized = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.demo_nested_mapview);
        mMapView = (MapView) findViewById(R.id.map_view);
        mMapView.setDaumMapApiKey(MapApiConst.DAUM_MAPS_ANDROID_APP_API_KEY);
        mMapView.setMapViewEventListener(this);

        mPolyline2Points = new MapPoint[]{
                //
                MapPoint.mapPointWithWCONGCoord(475334.0, 1101210.0),
                MapPoint.mapPointWithWCONGCoord(474300.0,1104123.0),
                MapPoint.mapPointWithWCONGCoord(474300.0,1104123.0),
                MapPoint.mapPointWithWCONGCoord(473873.0,1105377.0),
                MapPoint.mapPointWithWCONGCoord(473302.0,1107097.0),
                MapPoint.mapPointWithWCONGCoord(473126.0,1109606.0),
                MapPoint.mapPointWithWCONGCoord(473063.0,1110548.0),
                MapPoint.mapPointWithWCONGCoord(473435.0,1111020.0),
                MapPoint.mapPointWithWCONGCoord(474068.0,1111714.0),
                MapPoint.mapPointWithWCONGCoord(475475.0,1112765.0),
                MapPoint.mapPointWithWCONGCoord(476938.0,1113532.0),
                MapPoint.mapPointWithWCONGCoord(478725.0,1114391.0),
                MapPoint.mapPointWithWCONGCoord(479453.0,1114785.0),
                MapPoint.mapPointWithWCONGCoord(480145.0,1115145.0),
                MapPoint.mapPointWithWCONGCoord(481280.0,1115237.0),
                MapPoint.mapPointWithWCONGCoord(481777.0,1115164.0),
                MapPoint.mapPointWithWCONGCoord(482322.0,1115923.0),
                MapPoint.mapPointWithWCONGCoord(482832.0,1116322.0),
                MapPoint.mapPointWithWCONGCoord(483384.0,1116754.0),
                MapPoint.mapPointWithWCONGCoord(484401.0,1117547.0),
                MapPoint.mapPointWithWCONGCoord(484893.0,1117930.0),
                MapPoint.mapPointWithWCONGCoord(485016.0,1118034.0)
        };
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        super.onCreateOptionsMenu(menu);
        menu.add(0, MENU_ADD_POLYLINE1, Menu.NONE, "Add Polyline1");
        menu.add(0, MENU_ADD_POLYLINE2, Menu.NONE, "Add Polyline2");
        menu.add(0, MENU_REMOVE_POLYLINES, Menu.NONE, "Remove All Polylines");
        menu.add(0, MENU_ADD_CIRCLES, Menu.NONE, "Add Circles");
        menu.add(0, MENU_REMOVE_CIRCLE, Menu.NONE, "Remove All Circles");

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (!isMapViewInitialized) {
            Toast.makeText(this, "MapView is not initialized", Toast.LENGTH_SHORT).show();
            return super.onOptionsItemSelected(item);
        }

        final int itemId = item.getItemId();

        switch (itemId) {
            case MENU_ADD_POLYLINE1: {
                addPolyline1();
                return true;
            }
            case MENU_ADD_POLYLINE2: {
                addPolyline2();
                return true;
            }
            case MENU_REMOVE_POLYLINES: {
                mMapView.removeAllPolylines();
                return true;
            }
            case MENU_ADD_CIRCLES : {
                addCircles();
                return true;
            }
            case MENU_REMOVE_CIRCLE : {
                mMapView.removeAllCircles();

                return true;
            }

        }

        return super.onOptionsItemSelected(item);
    }

    private void addCircles() {
        MapCircle circle1 = new MapCircle(
        		MapPoint.mapPointWithGeoCoord(37.537094, 127.005470), // center
        		500, // radius
        		Color.argb(128, 255, 0, 0), // strokeColor 
        		Color.argb(128, 0, 255, 0) // fillColor
        );
        circle1.setTag(1234);
        mMapView.addCircle(circle1);
        MapCircle circle2 = new MapCircle(
        		MapPoint.mapPointWithGeoCoord(37.551094, 127.019470), // center
        		1000, // radius
        		Color.argb(128, 255, 0, 0), // strokeColor 
        		Color.argb(128, 255, 255, 0) // fillColor
        );
        circle2.setTag(5678);
        mMapView.addCircle(circle2);
        
     // 지도뷰의 중심좌표와 줌레벨을 Circle이 모두 나오도록 조정.
        MapPointBounds[] mapPointBoundsArray = { circle1.getBound(), circle2.getBound() };
        MapPointBounds mapPointBounds = new MapPointBounds(mapPointBoundsArray);
        int padding = 50; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    private void addPolyline2() {
        MapPOIItem existingPOIItemStart = mMapView.findPOIItemByTag(10001);
        if (existingPOIItemStart != null) {
            mMapView.removePOIItem(existingPOIItemStart);
        }

        MapPOIItem existingPOIItemEnd = mMapView.findPOIItemByTag(10002);
        if (existingPOIItemEnd != null) {
            mMapView.removePOIItem(existingPOIItemEnd);
        }

        MapPolyline existingPolyline = mMapView.findPolylineByTag(2000);
        if (existingPolyline != null) {
            mMapView.removePolyline(existingPolyline);
        }

        MapPOIItem poiItemStart = new MapPOIItem();
        poiItemStart.setItemName("Start");
        poiItemStart.setTag(10001);
        poiItemStart.setMapPoint(MapPoint.mapPointWithWCONGCoord(475334.0,1101210.0));
        poiItemStart.setMarkerType(MapPOIItem.MarkerType.CustomImage);
        poiItemStart.setShowAnimationType(MapPOIItem.ShowAnimationType.SpringFromGround);
        poiItemStart.setShowCalloutBalloonOnTouch(false);
        poiItemStart.setCustomImageResourceId(R.drawable.custom_poi_marker_start);
        poiItemStart.setCustomImageAnchorPointOffset(new MapPOIItem.ImageOffset(29, 2));
        mMapView.addPOIItem(poiItemStart);

        MapPOIItem poiItemEnd = new MapPOIItem();
        poiItemEnd.setItemName("End");
        poiItemEnd.setTag(10001);
        poiItemEnd.setMapPoint(MapPoint.mapPointWithWCONGCoord(485016.0,1118034.0));
        poiItemEnd.setMarkerType(MapPOIItem.MarkerType.CustomImage);
        poiItemEnd.setShowAnimationType(MapPOIItem.ShowAnimationType.SpringFromGround);
        poiItemEnd.setShowCalloutBalloonOnTouch(false);
        poiItemEnd.setCustomImageResourceId(R.drawable.custom_poi_marker_end);
        poiItemEnd.setCustomImageAnchorPointOffset(new MapPOIItem.ImageOffset(29, 2));
        mMapView.addPOIItem(poiItemEnd);

        MapPolyline polyline2 = new MapPolyline(21);
        polyline2.setTag(2000);
        polyline2.setLineColor(Color.argb(128, 0, 0, 255));
        polyline2.addPoints(mPolyline2Points);
        mMapView.addPolyline(polyline2);

        MapPointBounds mapPointBounds = new MapPointBounds(mPolyline2Points);
        int padding = 200; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    private void addPolyline1() {
        MapPolyline existingPolyline = mMapView.findPolylineByTag(1000);
        if (existingPolyline != null) {
            mMapView.removePolyline(existingPolyline);
        }
//        double[][] arr = {{128.9912235,35.1607871},{128.9911146,35.1610788},{128.9910486,35.1614303},{128.9910014,35.1626327},{128.9909999,35.1626751},{128.9910008,35.1631431},{128.9910013,35.1634126},{128.9909976,35.1636886},{128.9909953,35.1639257},{128.9909866,35.1640466},{128.9909776,35.1641586},{128.9909176,35.1643586},{128.990859,35.1645153},{128.9908244,35.1646076},{128.9907615,35.1647076},{128.9906993,35.1647913},{128.9906616,35.1648333},{128.9905991,35.1648962},{128.9903781,35.165118},{128.9897374,35.165748},{128.9893653,35.1661142},{128.9892748,35.1662081},{128.9892069,35.1662784},{128.9891616,35.1663249},{128.9890743,35.1664162},{128.9889991,35.1665082},{128.9889905,35.1665164},{128.9889411,35.1665756},{128.9889088,35.1666139},{128.9888747,35.1666666},{128.9888583,35.1667353},{128.9888353,35.1668573},{128.9887374,35.1678079},{128.9887056,35.1681726},{128.9886909,35.1683314},{128.9886506,35.1687683},{128.9886317,35.1688776},{128.9886129,35.1689897},{128.9885573,35.1691923},{128.9885247,35.1692747},{128.9885059,35.1695653},{128.9884957,35.1697322},{128.9884897,35.1698216},{128.9884886,35.169882},{128.988472,35.1707171},{128.9884169,35.1710072},{128.9884108,35.171037},{128.9882911,35.1713991},{128.988246,35.1715151},{128.988215,35.1716164},{128.9882098,35.1716354},{128.9881888,35.1716898},{128.9881396,35.1718184},{128.9881144,35.1718837},{128.9880232,35.1721228},{128.9880139,35.1721509},{128.98801,35.1721816},{128.9880105,35.1722059},{128.9881088,35.1727186},{128.9882111,35.1733945},{128.9882248,35.1734827},{128.9882475,35.1736438},{128.9883035,35.1740623},{128.9883786,35.1746303},{128.9884115,35.1748716},{128.9884356,35.1750489},{128.9884499,35.1751659},{128.9884537,35.1751938},{128.9884739,35.1753414},{128.988487,35.1755162},{128.9884872,35.1756496},{128.9884995,35.1763825},{128.9884929,35.1765043},{128.9884935,35.1765944},{128.9884929,35.1766215},{128.9884989,35.1770722},{128.9885221,35.1778627},{128.9885217,35.1784451},{128.9885257,35.1786055},{128.9885265,35.1786488},{128.9885344,35.1787786},{128.988535,35.1788741},{128.9885244,35.1801581},{128.9885248,35.1804827},{128.9885143,35.1811095},{128.9885123,35.1811816},{128.9885218,35.1815827},{128.988524,35.1816431},{128.9885246,35.1816747},{128.9885218,35.1815827},{128.9885123,35.1811816},{128.9885143,35.1811095},{128.9885248,35.1804827},{128.9885244,35.1801581},{128.988535,35.1788741},{128.9885344,35.1787786},{128.9885296,35.1786957},{128.9885265,35.1786488},{128.9885217,35.1784451},{128.9885217,35.1780205}};
        double[][] arr = {{129.0654806,35.1528347},{129.0654788,35.1530872},{129.0654782,35.1531088},{129.0654724,35.1534957},{129.0654664,35.1541008},{129.065225,35.1541066},{129.0652296,35.1534862},{129.0652377,35.1531074},{129.0652445,35.1527747},{129.0652454,35.1525907},{129.0652456,35.1523734},{129.0652453,35.1522995},{129.0652459,35.1522174},{129.0652422,35.1520246},{129.0652641,35.1516771},{129.0652302,35.1515126},{129.0652481,35.1511869},{129.0652655,35.1508873},{129.0652854,35.1504976},{129.0652669,35.150276},{129.0652499,35.1501915},{129.065173,35.1500744},{129.065082,35.1500214},{129.0649928,35.1500055},{129.0645781,35.1501902},{129.0642296,35.1503354},{129.0638744,35.1504175},{129.0635987,35.1504653},{129.063405,35.1504957},{129.0629802,35.1505553},{129.0627932,35.1505938},{129.0626128,35.1506322},{129.0623828,35.1506622},{129.0618775,35.1507002},{129.0617166,35.1506095},{129.0616755,35.1505865},{129.061563,35.1505546},{129.0614839,35.1505511},{129.0608438,35.1505495},{129.0593376,35.1505445},{129.0581397,35.1505275},{129.0574862,35.1505088},{129.0573363,35.1505342},{129.0571437,35.1505664},{129.056925,35.1506143},{129.0567494,35.1506725},{129.0565913,35.1507313},{129.0564912,35.1507777},{129.0563552,35.1508416},{129.056177,35.1509341},{129.055983,35.1510664},{129.0558379,35.1511747},{129.0556648,35.1513058},{129.0553527,35.1515749},{129.0551261,35.1517852},{129.054537,35.1523247},{129.0537559,35.1530452},{129.0535996,35.1531969},{129.0534259,35.1533569},{129.0519122,35.1547494},{129.0516747,35.1550166},{129.0514606,35.155307},{129.0512621,35.155608},{129.0510999,35.1559662},{129.0509616,35.156316},{129.050662,35.157766},{129.0505883,35.1581086},{129.0502079,35.1598725},{129.0500976,35.1603635},{129.0500601,35.160529},{129.0499866,35.1607662},{129.049812,35.1611083},{129.0495741,35.1614161},{129.0494621,35.1615329},{129.0491119,35.1618241},{129.04875,35.1620749},{129.0481116,35.1623409},{129.0478364,35.1624166},{129.0471242,35.1625492},{129.0459746,35.1627216},{129.0456249,35.1627495},{129.0450242,35.162741},{129.0447369,35.1626996},{129.0445407,35.1626624},{129.0443865,35.1626328},{129.0433365,35.1623829},{129.0427455,35.1622462},{129.0423617,35.1621582},{129.0410363,35.1618514},{129.0378483,35.1611138},{129.0377866,35.1610993},{129.0374712,35.161023},{129.0367753,35.1608561},{129.0361432,35.1606414},{129.0358428,35.1604883},{129.0353773,35.1602526},{129.0350392,35.1600802},{129.0348873,35.1600036},{129.0344845,35.1598329},{129.03409,35.1596955},{129.033815,35.1596088},{129.0334454,35.1595143},{129.031855,35.1591251},{129.0315936,35.1590608},{129.0265906,35.1578842},{129.0257653,35.1576629},{129.0254669,35.1575594},{129.0250373,35.1573664},{129.0246497,35.1571243},{129.0234726,35.1562906},{129.0230498,35.1559912},{129.0223139,35.1555587},{129.0219401,35.1554101},{129.0218373,35.1553699},{129.0216828,35.1553268},{129.0212579,35.1552068},{129.0175249,35.1542411},{129.0167248,35.1540158},{129.0156582,35.1536847},{129.0155721,35.1536579},{129.0148201,35.1534238},{129.0137745,35.1530997},{129.0131247,35.1529248},{129.0127998,35.1528666},{129.0120552,35.152793},{129.0120365,35.1527914},{129.0109721,35.1527578},{129.0100912,35.1527291},{129.010011,35.1527265},{129.0099022,35.1527225},{129.0089751,35.1526889},{129.0087993,35.152683},{129.0080867,35.1526162},{129.0069874,35.1524748},{129.0065038,35.1524429},{129.0062984,35.1524337},{129.0061502,35.1524329},{129.0061183,35.1524324},{129.0057741,35.1524592},{129.0055746,35.1524743},{129.0045366,35.1526242},{129.0044117,35.152633},{129.0039382,35.1526172},{129.0039239,35.1526165},{129.0033867,35.152533},{129.0029249,35.1523747},{129.0024865,35.1521745},{129.0019033,35.1517391},{129.0018621,35.151708},{129.0010956,35.1510954},{129.0008616,35.1509081},{129.0003497,35.1505916},{128.9999999,35.1504328},{128.9999292,35.1504075},{128.9998155,35.1503737},{128.999412,35.1502832},{128.999062,35.1502325},{128.9974103,35.1500753},{128.9964814,35.1500038},{128.9962781,35.1499901},{128.9939249,35.1498325},{128.9901066,35.149573},{128.9896651,35.1495613},{128.9891387,35.1495885},{128.9887182,35.1496451},{128.9863612,35.1500608},{128.9841618,35.1504493},{128.982379,35.1507543},{128.9807211,35.1510387},{128.9780749,35.1514912},{128.97512,35.151996},{128.9746746,35.1520763},{128.9744941,35.1521091},{128.9724774,35.1524718},{128.9723505,35.152495},{128.9720114,35.152564},{128.969896,35.1529936},{128.9696893,35.1530358},{128.9695176,35.1530721},{128.9671966,35.1535475},{128.9638523,35.1541388},{128.9607626,35.154663},{128.9604594,35.1547144},{128.9585713,35.155032},{128.956062,35.1554202},{128.9559482,35.1554387},{128.9543697,35.1556947},{128.9539625,35.1557609},{128.9522975,35.1560334},{128.9522449,35.1560421},{128.9519418,35.1560971},{128.9509643,35.1562585},{128.9476629,35.1568029},{128.9468298,35.15694},{128.9448872,35.1572806},{128.9445708,35.1573348},{128.9436197,35.1574967},{128.9430385,35.1575956},{128.9387652,35.1583236},{128.9384653,35.1583767},{128.9331936,35.1592696},{128.932896,35.1593236},{128.9304233,35.1597478},{128.9269737,35.1603132},{128.9266299,35.1603668},{128.926168,35.1604507},{128.924696,35.160716},{128.9238498,35.1608612},{128.9235072,35.1609193},{128.9218488,35.1612039},{128.9212424,35.1613075},{128.919622,35.1615699},{128.9179504,35.16185},{128.9171283,35.1619949},{128.9136221,35.1625958},{128.9131546,35.1626752},{128.9126368,35.1627624},{128.91101,35.1630365},{128.907237,35.163771},{128.9070958,35.163797},{128.9058743,35.1640195},{128.8991227,35.1651589},{128.8982509,35.1652843},{128.8975803,35.1653615},{128.8960782,35.1654861},{128.8951643,35.1655282},{128.8946024,35.1655482},{128.8945124,35.1655501},{128.8942703,35.1656458},{128.8939489,35.1657234},{128.8936102,35.1658229},{128.8934958,35.1658738},{128.8933871,35.16594},{128.8932876,35.1660322},{128.8931906,35.166137},{128.8931008,35.166276},{128.8930604,35.1664207},{128.893047,35.1665345},{128.8930539,35.1666164},{128.8930646,35.1666659},{128.8930937,35.1667656},{128.8931414,35.1668544},{128.8937149,35.1677124},{128.8941188,35.1682163},{128.8941793,35.1682886},{128.8945936,35.1688221},{128.8949254,35.1691591},{128.8949709,35.1693119},{128.8951686,35.1694439},{128.8952987,35.1695416},{128.8954818,35.1696504},{128.8958757,35.1698298},{128.8962776,35.1698964},{128.896549,35.1699077},{128.8967409,35.1698911},{128.896892,35.1698641},{128.8970685,35.1697854},{128.8971955,35.1697001},{128.8973047,35.169596},{128.8973787,35.1694933},{128.8974357,35.1693601},{128.8974647,35.169257},{128.8974774,35.1691667},{128.8974609,35.1690379},{128.8974202,35.168905},{128.8973513,35.1687921},{128.896953,35.1682963},{128.8968821,35.1681313},{128.8968485,35.168092},{128.8957171,35.1667796},{128.8956284,35.1666661},{128.8952593,35.166206},{128.8948945,35.1657396},{128.8941125,35.164764},{128.8934714,35.1639933},{128.8932384,35.1637877},{128.8931684,35.1637416},{128.8929475,35.163599},{128.8927625,35.1635028},{128.8925413,35.1634098},{128.8899498,35.1626164},{128.8898328,35.1625772},{128.8897798,35.1625597},{128.8895269,35.1624743},{128.8892431,35.1623784},{128.8889515,35.1622735},{128.8889029,35.162256},{128.8888243,35.1622209},{128.8886241,35.162133},{128.8883618,35.162008},{128.8881366,35.1618744},{128.8878869,35.1617159},{128.8877367,35.1615995},{128.8874872,35.1613914},{128.8873367,35.1612533},{128.8872865,35.1612079},{128.8870243,35.1608999},{128.886812,35.1606165},{128.886404,35.1599278},{128.8862917,35.1597181},{128.8861749,35.1594994},{128.8857875,35.1587916},{128.8857704,35.1587548},{128.8854488,35.1580489},{128.8848489,35.1564698},{128.8847559,35.1562265},{128.8847248,35.1561412},{128.8846815,35.1559839},{128.8846272,35.155825},{128.884554,35.1556491},{128.8844741,35.1554697},{128.8844513,35.1554185},{128.884375,35.155258},{128.8841868,35.1549743},{128.8841239,35.1548912},{128.8838491,35.1546076},{128.883324,35.1541331},{128.8831867,35.1539994},{128.8829868,35.1537997},{128.8826241,35.1534495},{128.8816994,35.1525242},{128.8812305,35.1520579},{128.8811244,35.1519528},{128.8810206,35.1518494},{128.8807869,35.1515996},{128.8805239,35.1513032},{128.8801747,35.1509078},{128.8799779,35.1506936},{128.8793874,35.1500503},{128.8787746,35.1493828},{128.8786067,35.1491927},{128.8785116,35.1490847},{128.878422,35.1489838},{128.878347,35.1488981},{128.8783168,35.1488642},{128.8781881,35.1487187},{128.8781613,35.1486892},{128.8780247,35.148533},{128.8779358,35.1484024},{128.8778491,35.1482744},{128.8775387,35.1477667},{128.8773394,35.1474065},{128.8773123,35.1473582},{128.8771993,35.1471692},{128.8770848,35.146955},{128.8770644,35.1469174},{128.8769871,35.1467578},{128.8765741,35.1459582},{128.8764584,35.1457377},{128.8758875,35.1446244},{128.8758115,35.1444819},{128.8757685,35.1444012},{128.8757502,35.1443599},{128.8756093,35.1440757},{128.8755707,35.1440013},{128.8752369,35.1433415},{128.8750746,35.1430242},{128.8750667,35.1430116},{128.874999,35.1428997},{128.8749865,35.1428746},{128.8746861,35.1423776},{128.8746793,35.1423624},{128.8746613,35.1423364},{128.8746174,35.1422702},{128.8743837,35.1419483},{128.8742895,35.1418339},{128.8742336,35.1417696},{128.8741012,35.1416016},{128.8740698,35.1415623},{128.8739868,35.1414569},{128.8738221,35.141255},{128.8737828,35.1412067},{128.8737559,35.1411719},{128.8737335,35.1411433},{128.8736718,35.1410637},{128.8734442,35.1407823},{128.8733601,35.1406777},{128.8728804,35.1400854},{128.8724145,35.1395975},{128.8722115,35.1394041},{128.8720609,35.1392616},{128.8718902,35.1390976},{128.8708723,35.1382859},{128.8697625,35.1374915},{128.8693877,35.1372667},{128.8691826,35.1371455},{128.8690463,35.1370695},{128.8689953,35.1370394},{128.8688469,35.1369573},{128.8683617,35.1366914},{128.8680737,35.1365332},{128.8672639,35.1360888},{128.8662675,35.1355726},{128.8644549,35.1347563},{128.8643675,35.1347158},{128.8643144,35.1346921},{128.863932,35.1345323},{128.8636557,35.1344164},{128.8635197,35.1343593},{128.8630109,35.1341243},{128.8628119,35.1340328},{128.8624116,35.1337911},{128.8621869,35.1336079},{128.8615785,35.133191},{128.8613261,35.1330649},{128.8611565,35.133028},{128.8609658,35.1330428},{128.8607506,35.1331065},{128.8602372,35.1333828},{128.8601205,35.133495},{128.8600373,35.1335743},{128.8599331,35.1337081},{128.8598944,35.133759},{128.8597122,35.1339549},{128.8580457,35.1355181},{128.8579073,35.1356468},{128.8578836,35.1356687},{128.8579202,35.1356953},{128.8580147,35.1357646},{128.8582769,35.1359591},{128.8584903,35.1361172},{128.8591903,35.1366332},{128.8593348,35.1367389},{128.8592149,35.1368583},{128.8588399,35.1372088},{128.8584779,35.1375509},{128.858413,35.1376085},{128.8583542,35.1375695},{128.8578163,35.1371706}};
        MapPolyline polyline1 = new MapPolyline(10000);
        polyline1.setTag(1000);
        polyline1.setLineColor(Color.RED);


        for (double[] temp: arr) {
            polyline1.addPoint(MapPoint.mapPointWithGeoCoord(temp[1], temp[0]));
        }
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.537229, 127.005515));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.545024,127.03923));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.527896,127.036245));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.541889,127.095388));
        Log.d("tag", String.valueOf(polyline1.getLineColor()));
        mMapView.addPolyline(polyline1);

        MapPointBounds mapPointBounds = new MapPointBounds(polyline1.getMapPoints());
        int padding = 100; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    @Override
    public void onMapViewInitialized(MapView mapView) {
        isMapViewInitialized = true;
    }

    @Override
    public void onMapViewCenterPointMoved(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewZoomLevelChanged(MapView mapView, int i) {

    }

    @Override
    public void onMapViewSingleTapped(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDoubleTapped(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewLongPressed(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDragStarted(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDragEnded(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewMoveFinished(MapView mapView, MapPoint mapPoint) {

    }
}
