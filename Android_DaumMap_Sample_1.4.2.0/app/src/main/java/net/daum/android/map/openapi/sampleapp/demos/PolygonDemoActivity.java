package net.daum.android.map.openapi.sampleapp.demos;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

import net.daum.android.map.openapi.sampleapp.MapApiConst;
import net.daum.android.map.openapi.sampleapp.R;
import net.daum.mf.map.api.CameraUpdateFactory;
import net.daum.mf.map.api.MapCircle;
import net.daum.mf.map.api.MapPOIItem;
import net.daum.mf.map.api.MapPoint;
import net.daum.mf.map.api.MapPointBounds;
import net.daum.mf.map.api.MapPolyline;
import net.daum.mf.map.api.MapView;

import java.util.ArrayList;
import java.util.List;

public class PolygonDemoActivity extends FragmentActivity implements MapView.MapViewEventListener {

    private static final int MENU_ADD_POLYLINE1 = Menu.FIRST;
    private static final int MENU_ADD_POLYLINE2 = Menu.FIRST + 1;
    private static final int MENU_REMOVE_POLYLINES = Menu.FIRST + 2;
    private static final int MENU_ADD_CIRCLES = Menu.FIRST + 3;
    private static final int MENU_REMOVE_CIRCLE = Menu.FIRST + 4;

    private MapView mMapView;
    private MapPoint[] mPolyline2Points;
    private boolean isMapViewInitialized = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.demo_nested_mapview);
        mMapView = (MapView) findViewById(R.id.map_view);
        mMapView.setDaumMapApiKey(MapApiConst.DAUM_MAPS_ANDROID_APP_API_KEY);
        mMapView.setMapViewEventListener(this);

        mPolyline2Points = new MapPoint[]{
                //
                MapPoint.mapPointWithWCONGCoord(475334.0, 1101210.0),
                MapPoint.mapPointWithWCONGCoord(474300.0,1104123.0),
                MapPoint.mapPointWithWCONGCoord(474300.0,1104123.0),
                MapPoint.mapPointWithWCONGCoord(473873.0,1105377.0),
                MapPoint.mapPointWithWCONGCoord(473302.0,1107097.0),
                MapPoint.mapPointWithWCONGCoord(473126.0,1109606.0),
                MapPoint.mapPointWithWCONGCoord(473063.0,1110548.0),
                MapPoint.mapPointWithWCONGCoord(473435.0,1111020.0),
                MapPoint.mapPointWithWCONGCoord(474068.0,1111714.0),
                MapPoint.mapPointWithWCONGCoord(475475.0,1112765.0),
                MapPoint.mapPointWithWCONGCoord(476938.0,1113532.0),
                MapPoint.mapPointWithWCONGCoord(478725.0,1114391.0),
                MapPoint.mapPointWithWCONGCoord(479453.0,1114785.0),
                MapPoint.mapPointWithWCONGCoord(480145.0,1115145.0),
                MapPoint.mapPointWithWCONGCoord(481280.0,1115237.0),
                MapPoint.mapPointWithWCONGCoord(481777.0,1115164.0),
                MapPoint.mapPointWithWCONGCoord(482322.0,1115923.0),
                MapPoint.mapPointWithWCONGCoord(482832.0,1116322.0),
                MapPoint.mapPointWithWCONGCoord(483384.0,1116754.0),
                MapPoint.mapPointWithWCONGCoord(484401.0,1117547.0),
                MapPoint.mapPointWithWCONGCoord(484893.0,1117930.0),
                MapPoint.mapPointWithWCONGCoord(485016.0,1118034.0)
        };
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        super.onCreateOptionsMenu(menu);
        menu.add(0, MENU_ADD_POLYLINE1, Menu.NONE, "Add Polyline1");
        menu.add(0, MENU_ADD_POLYLINE2, Menu.NONE, "Add Polyline2");
        menu.add(0, MENU_REMOVE_POLYLINES, Menu.NONE, "Remove All Polylines");
        menu.add(0, MENU_ADD_CIRCLES, Menu.NONE, "Add Circles");
        menu.add(0, MENU_REMOVE_CIRCLE, Menu.NONE, "Remove All Circles");

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (!isMapViewInitialized) {
            Toast.makeText(this, "MapView is not initialized", Toast.LENGTH_SHORT).show();
            return super.onOptionsItemSelected(item);
        }

        final int itemId = item.getItemId();

        switch (itemId) {
            case MENU_ADD_POLYLINE1: {
                addPolyline1();
                return true;
            }
            case MENU_ADD_POLYLINE2: {
                addPolyline2();
                return true;
            }
            case MENU_REMOVE_POLYLINES: {
                mMapView.removeAllPolylines();
                return true;
            }
            case MENU_ADD_CIRCLES : {
                addCircles();
                return true;
            }
            case MENU_REMOVE_CIRCLE : {
                mMapView.removeAllCircles();

                return true;
            }

        }

        return super.onOptionsItemSelected(item);
    }

    private void addCircles() {
        MapCircle circle1 = new MapCircle(
        		MapPoint.mapPointWithGeoCoord(37.537094, 127.005470), // center
        		500, // radius
        		Color.argb(128, 255, 0, 0), // strokeColor 
        		Color.argb(128, 0, 255, 0) // fillColor
        );
        circle1.setTag(1234);
        mMapView.addCircle(circle1);
        MapCircle circle2 = new MapCircle(
        		MapPoint.mapPointWithGeoCoord(37.551094, 127.019470), // center
        		1000, // radius
        		Color.argb(128, 255, 0, 0), // strokeColor 
        		Color.argb(128, 255, 255, 0) // fillColor
        );
        circle2.setTag(5678);
        mMapView.addCircle(circle2);
        
     // 지도뷰의 중심좌표와 줌레벨을 Circle이 모두 나오도록 조정.
        MapPointBounds[] mapPointBoundsArray = { circle1.getBound(), circle2.getBound() };
        MapPointBounds mapPointBounds = new MapPointBounds(mapPointBoundsArray);
        int padding = 50; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    private void addPolyline2() {
        MapPOIItem existingPOIItemStart = mMapView.findPOIItemByTag(10001);
        if (existingPOIItemStart != null) {
            mMapView.removePOIItem(existingPOIItemStart);
        }

        MapPOIItem existingPOIItemEnd = mMapView.findPOIItemByTag(10002);
        if (existingPOIItemEnd != null) {
            mMapView.removePOIItem(existingPOIItemEnd);
        }

        MapPolyline existingPolyline = mMapView.findPolylineByTag(2000);
        if (existingPolyline != null) {
            mMapView.removePolyline(existingPolyline);
        }

        MapPOIItem poiItemStart = new MapPOIItem();
        poiItemStart.setItemName("Start");
        poiItemStart.setTag(10001);
        poiItemStart.setMapPoint(MapPoint.mapPointWithWCONGCoord(475334.0,1101210.0));
        poiItemStart.setMarkerType(MapPOIItem.MarkerType.CustomImage);
        poiItemStart.setShowAnimationType(MapPOIItem.ShowAnimationType.SpringFromGround);
        poiItemStart.setShowCalloutBalloonOnTouch(false);
        poiItemStart.setCustomImageResourceId(R.drawable.custom_poi_marker_start);
        poiItemStart.setCustomImageAnchorPointOffset(new MapPOIItem.ImageOffset(29, 2));
        mMapView.addPOIItem(poiItemStart);

        MapPOIItem poiItemEnd = new MapPOIItem();
        poiItemEnd.setItemName("End");
        poiItemEnd.setTag(10001);
        poiItemEnd.setMapPoint(MapPoint.mapPointWithWCONGCoord(485016.0,1118034.0));
        poiItemEnd.setMarkerType(MapPOIItem.MarkerType.CustomImage);
        poiItemEnd.setShowAnimationType(MapPOIItem.ShowAnimationType.SpringFromGround);
        poiItemEnd.setShowCalloutBalloonOnTouch(false);
        poiItemEnd.setCustomImageResourceId(R.drawable.custom_poi_marker_end);
        poiItemEnd.setCustomImageAnchorPointOffset(new MapPOIItem.ImageOffset(29, 2));
        mMapView.addPOIItem(poiItemEnd);

        MapPolyline polyline2 = new MapPolyline(21);
        polyline2.setTag(2000);
        polyline2.setLineColor(Color.argb(128, 0, 0, 255));
        polyline2.addPoints(mPolyline2Points);
        mMapView.addPolyline(polyline2);

        MapPointBounds mapPointBounds = new MapPointBounds(mPolyline2Points);
        int padding = 200; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    private void addPolyline1() {
        MapPolyline existingPolyline = mMapView.findPolylineByTag(1000);
        if (existingPolyline != null) {
            mMapView.removePolyline(existingPolyline);
        }
//        double[][] arr = {{128.9912235,35.1607871},{128.9911146,35.1610788},{128.9910486,35.1614303},{128.9910014,35.1626327},{128.9909999,35.1626751},{128.9910008,35.1631431},{128.9910013,35.1634126},{128.9909976,35.1636886},{128.9909953,35.1639257},{128.9909866,35.1640466},{128.9909776,35.1641586},{128.9909176,35.1643586},{128.990859,35.1645153},{128.9908244,35.1646076},{128.9907615,35.1647076},{128.9906993,35.1647913},{128.9906616,35.1648333},{128.9905991,35.1648962},{128.9903781,35.165118},{128.9897374,35.165748},{128.9893653,35.1661142},{128.9892748,35.1662081},{128.9892069,35.1662784},{128.9891616,35.1663249},{128.9890743,35.1664162},{128.9889991,35.1665082},{128.9889905,35.1665164},{128.9889411,35.1665756},{128.9889088,35.1666139},{128.9888747,35.1666666},{128.9888583,35.1667353},{128.9888353,35.1668573},{128.9887374,35.1678079},{128.9887056,35.1681726},{128.9886909,35.1683314},{128.9886506,35.1687683},{128.9886317,35.1688776},{128.9886129,35.1689897},{128.9885573,35.1691923},{128.9885247,35.1692747},{128.9885059,35.1695653},{128.9884957,35.1697322},{128.9884897,35.1698216},{128.9884886,35.169882},{128.988472,35.1707171},{128.9884169,35.1710072},{128.9884108,35.171037},{128.9882911,35.1713991},{128.988246,35.1715151},{128.988215,35.1716164},{128.9882098,35.1716354},{128.9881888,35.1716898},{128.9881396,35.1718184},{128.9881144,35.1718837},{128.9880232,35.1721228},{128.9880139,35.1721509},{128.98801,35.1721816},{128.9880105,35.1722059},{128.9881088,35.1727186},{128.9882111,35.1733945},{128.9882248,35.1734827},{128.9882475,35.1736438},{128.9883035,35.1740623},{128.9883786,35.1746303},{128.9884115,35.1748716},{128.9884356,35.1750489},{128.9884499,35.1751659},{128.9884537,35.1751938},{128.9884739,35.1753414},{128.988487,35.1755162},{128.9884872,35.1756496},{128.9884995,35.1763825},{128.9884929,35.1765043},{128.9884935,35.1765944},{128.9884929,35.1766215},{128.9884989,35.1770722},{128.9885221,35.1778627},{128.9885217,35.1784451},{128.9885257,35.1786055},{128.9885265,35.1786488},{128.9885344,35.1787786},{128.988535,35.1788741},{128.9885244,35.1801581},{128.9885248,35.1804827},{128.9885143,35.1811095},{128.9885123,35.1811816},{128.9885218,35.1815827},{128.988524,35.1816431},{128.9885246,35.1816747},{128.9885218,35.1815827},{128.9885123,35.1811816},{128.9885143,35.1811095},{128.9885248,35.1804827},{128.9885244,35.1801581},{128.988535,35.1788741},{128.9885344,35.1787786},{128.9885296,35.1786957},{128.9885265,35.1786488},{128.9885217,35.1784451},{128.9885217,35.1780205}};
        double[][] arr = {{128.9912235,35.1607871},{128.9911146,35.1610788},{128.9910486,35.1614303},{128.9910014,35.1626327},{128.9909999,35.1626751},{128.9910008,35.1631431},{128.9910013,35.1634126},{128.9909976,35.1636886},{128.9909953,35.1639257},{128.9909866,35.1640466},{128.9909776,35.1641586},{128.9909176,35.1643586},{128.990859,35.1645153},{128.9908244,35.1646076},{128.9907615,35.1647076},{128.9906993,35.1647913},{128.9906616,35.1648333},{128.9905991,35.1648962},{128.9903781,35.165118},{128.9897374,35.165748},{128.9893653,35.1661142},{128.9892748,35.1662081},{128.9892069,35.1662784},{128.9891013,35.1662121},{128.9893168,35.1659858},{128.9895898,35.1657246},{128.9898499,35.1654744},{128.9901043,35.1652179},{128.990362,35.1649578},{128.9905745,35.1647496},{128.990612,35.1646995},{128.9906621,35.164616},{128.9906872,35.1645498},{128.9907243,35.1644159},{128.9907499,35.1643164},{128.9907864,35.1641492},{128.9908118,35.1639163},{128.9908144,35.1626738},{128.9908683,35.1614154},{128.9909409,35.1610638},{128.9909471,35.1610448},{128.9910477,35.1607216},{128.9911752,35.1604297},{128.9913137,35.1601963},{128.991663,35.1596664},{128.9917624,35.1595164},{128.9918033,35.159469},{128.9924248,35.1587581},{128.9926579,35.1584757},{128.9928138,35.1582944},{128.9929031,35.158195},{128.9930795,35.1579927},{128.9933243,35.1576912},{128.9939831,35.1569167},{128.9940766,35.1568065},{128.9941679,35.1566989},{128.9944205,35.1564028},{128.9949041,35.1558333},{128.9949632,35.1557641},{128.9950858,35.1556237},{128.9951631,35.1555299},{128.9951868,35.1555007},{128.9952373,35.1554415},{128.9954771,35.1551672},{128.9958114,35.1547826},{128.9958869,35.1547077},{128.9960515,35.1545821},{128.9961287,35.1545406},{128.9965616,35.1543243},{128.9968561,35.154217},{128.9969499,35.1541824},{128.9974191,35.1540279},{128.9976075,35.1539435},{128.9977458,35.1538868},{128.9980622,35.1537161},{128.9981868,35.1536298},{128.9989622,35.1530495},{128.9991241,35.1529582},{128.9991852,35.1529367},{128.9993368,35.1528826},{128.9995052,35.1528471},{128.9995741,35.1528327},{128.9996245,35.1528249},{128.9999148,35.1527942},{128.9999991,35.1527833},{129.0000825,35.1527814},{129.0001637,35.1527794},{129.0005379,35.1527685},{129.0010756,35.1527573},{129.0011403,35.1527556},{129.0013236,35.1527543},{129.0015255,35.1527463},{129.0018643,35.1527232},{129.0019477,35.1526618},{129.001989,35.1526405},{129.002014,35.1526267},{129.0020717,35.1526034},{129.0021352,35.1525927},{129.0027825,35.152573},{129.0028921,35.1525608},{129.0029698,35.1525463},{129.0030298,35.1525293},{129.0030789,35.1525089},{129.0031089,35.1524688},{129.0031789,35.1523372},{129.0031958,35.1523001},{129.0032336,35.1522049},{129.0032056,35.1520583},{129.0031047,35.1516439},{129.0030742,35.1515415},{129.0030116,35.1512998},{129.002975,35.1511578},{129.0029747,35.1511415},{129.0029749,35.150917},{129.0029745,35.150835},{129.0029743,35.1508224},{129.002974,35.1508061},{129.0029034,35.1507286},{129.0028522,35.1506913},{129.0028177,35.1506638},{129.0027099,35.1505921},{129.0022623,35.1505508},{129.0017114,35.1504999},{129.0016245,35.1504911},{129.001075,35.1504528},{129.0010409,35.1504505},{129.0008035,35.1504345},{129.0005474,35.1504179},{129.0002131,35.1503877},{129.0001835,35.1503863},{129.0001538,35.1503849},{129.0000835,35.1503812},{128.999999,35.1503814},{128.9999275,35.1503778},{128.9995726,35.1503587},{128.9995,35.1503488},{128.9994428,35.1503432},{128.9993735,35.1503359},{128.9992789,35.1503263},{128.9991426,35.1503135},{128.9986862,35.1502687},{128.9977594,35.1501918},{128.9976637,35.1501822},{128.997229,35.1501866},{128.9967367,35.1501576},{128.9960432,35.1501093},{128.9958992,35.1500994},{128.9958068,35.1500924},{128.9951516,35.1500392},{128.9946219,35.1500079},{128.9939241,35.149966},{128.9937889,35.1499586},{128.9936373,35.1499497},{128.9921519,35.1498228},{128.9917605,35.1497889},{128.9900128,35.1496661},{128.9899118,35.1496665},{128.9895157,35.1496749},{128.9893479,35.1496842},{128.9893084,35.1496874},{128.9892843,35.1496895},{128.9890311,35.1497088},{128.9889687,35.1497177},{128.9879991,35.1498838},{128.987325,35.1499976},{128.9861346,35.1502187},{128.9859333,35.1502527},{128.9857605,35.1502882},{128.9856226,35.1503115},{128.9854563,35.1503433},{128.9854125,35.1503492},{128.9845853,35.1504973},{128.9841082,35.1505816},{128.9822391,35.1509074},{128.9820169,35.1509435},{128.9819907,35.1509483},{128.9817476,35.1509856},{128.9816623,35.1509992},{128.9813821,35.1510469},{128.9809684,35.1511159},{128.9798247,35.1513075},{128.979644,35.151335},{128.9794733,35.1513614},{128.9791778,35.151411},{128.9780122,35.1516083},{128.9770546,35.1517723},{128.9768708,35.1518043},{128.9764878,35.1518712},{128.9758432,35.1519854},{128.9757874,35.1519915},{128.9754239,35.1520491},{128.9752587,35.1520809},{128.9750738,35.1521156},{128.9748111,35.1521576},{128.9742616,35.1522409},{128.9728073,35.1525029},{128.9725404,35.152554},{128.9701555,35.1530166},{128.9696893,35.1530358},{128.9695176,35.1530721},{128.9671966,35.1535475},{128.9638523,35.1541388},{128.9607626,35.154663},{128.9604594,35.1547144},{128.9585713,35.155032},{128.956062,35.1554202},{128.9559482,35.1554387},{128.9543697,35.1556947},{128.9539625,35.1557609},{128.9522975,35.1560334},{128.9522449,35.1560421},{128.9519418,35.1560971},{128.9509643,35.1562585},{128.9476629,35.1568029},{128.9468298,35.15694},{128.9448872,35.1572806},{128.9445708,35.1573348},{128.9436197,35.1574967},{128.9430385,35.1575956},{128.9387652,35.1583236},{128.9384653,35.1583767},{128.9331936,35.1592696},{128.932896,35.1593236},{128.9304233,35.1597478},{128.9269737,35.1603132},{128.9266299,35.1603668},{128.926168,35.1604507},{128.924696,35.160716},{128.9238498,35.1608612},{128.9235072,35.1609193},{128.9218488,35.1612039},{128.9212424,35.1613075},{128.919622,35.1615699},{128.9179504,35.16185},{128.9171283,35.1619949},{128.9136221,35.1625958},{128.9131546,35.1626752},{128.9126368,35.1627624},{128.91101,35.1630365},{128.907237,35.163771},{128.9070958,35.163797},{128.9058743,35.1640195},{128.8991227,35.1651589},{128.8982509,35.1652843},{128.8975803,35.1653615},{128.8960782,35.1654861},{128.8951643,35.1655282},{128.8946024,35.1655482},{128.8945124,35.1655501},{128.8942703,35.1656458},{128.8939489,35.1657234},{128.8936102,35.1658229},{128.8934958,35.1658738},{128.8933871,35.16594},{128.8932876,35.1660322},{128.8931906,35.166137},{128.8931008,35.166276},{128.8930604,35.1664207},{128.893047,35.1665345},{128.8930539,35.1666164},{128.8930646,35.1666659},{128.8930937,35.1667656},{128.8931414,35.1668544},{128.8937149,35.1677124},{128.8941188,35.1682163},{128.8941793,35.1682886},{128.8945936,35.1688221},{128.8949254,35.1691591},{128.8949709,35.1693119},{128.8951686,35.1694439},{128.8952987,35.1695416},{128.8954818,35.1696504},{128.8958757,35.1698298},{128.8962776,35.1698964},{128.896549,35.1699077},{128.8967409,35.1698911},{128.896892,35.1698641},{128.8970685,35.1697854},{128.8971955,35.1697001},{128.8973047,35.169596},{128.8973787,35.1694933},{128.8974357,35.1693601},{128.8974647,35.169257},{128.8974774,35.1691667},{128.8974609,35.1690379},{128.8974202,35.168905},{128.8973513,35.1687921},{128.896953,35.1682963},{128.8968821,35.1681313},{128.8968485,35.168092},{128.8957171,35.1667796},{128.8956284,35.1666661},{128.8952593,35.166206},{128.8948945,35.1657396},{128.8941125,35.164764},{128.8934714,35.1639933},{128.8932384,35.1637877},{128.8931684,35.1637416},{128.8929475,35.163599},{128.8927625,35.1635028},{128.8925413,35.1634098},{128.8899498,35.1626164},{128.8898328,35.1625772},{128.8897798,35.1625597},{128.8895269,35.1624743},{128.8892431,35.1623784},{128.8889515,35.1622735},{128.8889029,35.162256},{128.8888243,35.1622209},{128.8886241,35.162133},{128.8883618,35.162008},{128.8881366,35.1618744},{128.8878869,35.1617159},{128.8877367,35.1615995},{128.8874872,35.1613914},{128.8873367,35.1612533},{128.8872865,35.1612079},{128.8870243,35.1608999},{128.886812,35.1606165},{128.886404,35.1599278},{128.8862917,35.1597181},{128.8861749,35.1594994},{128.8857875,35.1587916},{128.8857704,35.1587548},{128.8854488,35.1580489},{128.8848489,35.1564698},{128.8847559,35.1562265},{128.8847248,35.1561412},{128.8846815,35.1559839},{128.8846272,35.155825},{128.884554,35.1556491},{128.8844741,35.1554697},{128.8844513,35.1554185},{128.884375,35.155258},{128.8841868,35.1549743},{128.8841239,35.1548912},{128.8838491,35.1546076},{128.883324,35.1541331},{128.8831867,35.1539994},{128.8829868,35.1537997},{128.8826241,35.1534495},{128.8816994,35.1525242},{128.8812305,35.1520579},{128.8811244,35.1519528},{128.8810206,35.1518494},{128.8807869,35.1515996},{128.8805239,35.1513032},{128.8801747,35.1509078},{128.8799779,35.1506936},{128.8793874,35.1500503},{128.8787746,35.1493828},{128.8786067,35.1491927},{128.8785116,35.1490847},{128.878422,35.1489838},{128.878347,35.1488981},{128.8783168,35.1488642},{128.8781881,35.1487187},{128.8781613,35.1486892},{128.8780247,35.148533},{128.8779358,35.1484024},{128.8778491,35.1482744},{128.8775387,35.1477667},{128.8773394,35.1474065},{128.8773123,35.1473582},{128.8771993,35.1471692},{128.8770848,35.146955},{128.8770644,35.1469174},{128.8769871,35.1467578},{128.8765741,35.1459582},{128.8764584,35.1457377},{128.8758875,35.1446244},{128.8758115,35.1444819},{128.8757685,35.1444012},{128.8757502,35.1443599},{128.8756093,35.1440757},{128.8755707,35.1440013},{128.8752369,35.1433415},{128.8750746,35.1430242},{128.8750667,35.1430116},{128.874999,35.1428997},{128.8749865,35.1428746},{128.8746861,35.1423776},{128.8746793,35.1423624},{128.8746613,35.1423364},{128.8746174,35.1422702},{128.8743837,35.1419483},{128.8742895,35.1418339},{128.8742336,35.1417696},{128.8741012,35.1416016},{128.8740698,35.1415623},{128.8739868,35.1414569},{128.8738221,35.141255},{128.8737828,35.1412067},{128.8737559,35.1411719},{128.8737335,35.1411433},{128.8736718,35.1410637},{128.8734442,35.1407823},{128.8733601,35.1406777},{128.8728804,35.1400854},{128.8724145,35.1395975},{128.8722115,35.1394041},{128.8720609,35.1392616},{128.8718902,35.1390976},{128.8708723,35.1382859},{128.8697625,35.1374915},{128.8693877,35.1372667},{128.8691826,35.1371455},{128.8690463,35.1370695},{128.8689953,35.1370394},{128.8688469,35.1369573},{128.8683617,35.1366914},{128.8680737,35.1365332},{128.8672639,35.1360888},{128.8662675,35.1355726},{128.8644549,35.1347563},{128.8643675,35.1347158},{128.8643144,35.1346921},{128.863932,35.1345323},{128.8636557,35.1344164},{128.8635197,35.1343593},{128.8630109,35.1341243},{128.8628119,35.1340328},{128.8624116,35.1337911},{128.8621869,35.1336079},{128.8615785,35.133191},{128.8613261,35.1330649},{128.8611565,35.133028},{128.8609658,35.1330428},{128.8607506,35.1331065},{128.8602372,35.1333828},{128.8601205,35.133495},{128.8600373,35.1335743},{128.8599331,35.1337081},{128.8598944,35.133759},{128.8597122,35.1339549},{128.8580457,35.1355181},{128.8579073,35.1356468},{128.8578836,35.1356687},{128.8579202,35.1356953},{128.8580147,35.1357646},{128.8582769,35.1359591},{128.8584903,35.1361172},{128.8591903,35.1366332},{128.8593348,35.1367389},{128.8592149,35.1368583},{128.8588399,35.1372088},{128.8584779,35.1375509},{128.858413,35.1376085},{128.8583542,35.1375695},{128.8578163,35.1371706}};
        MapPolyline polyline1 = new MapPolyline(10000);
        polyline1.setTag(1000);
        polyline1.setLineColor(Color.RED);


        for (double[] temp: arr) {
            polyline1.addPoint(MapPoint.mapPointWithGeoCoord(temp[1], temp[0]));
        }
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.537229, 127.005515));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.545024,127.03923));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.527896,127.036245));
//        polyline1.addPoint(MapPoint.mapPointWithGeoCoord(37.541889,127.095388));
        Log.d("tag", String.valueOf(polyline1.getLineColor()));
        mMapView.addPolyline(polyline1);

        MapPointBounds mapPointBounds = new MapPointBounds(polyline1.getMapPoints());
        int padding = 100; // px
        mMapView.moveCamera(CameraUpdateFactory.newMapPointBounds(mapPointBounds, padding));
    }

    @Override
    public void onMapViewInitialized(MapView mapView) {
        isMapViewInitialized = true;
    }

    @Override
    public void onMapViewCenterPointMoved(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewZoomLevelChanged(MapView mapView, int i) {

    }

    @Override
    public void onMapViewSingleTapped(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDoubleTapped(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewLongPressed(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDragStarted(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewDragEnded(MapView mapView, MapPoint mapPoint) {

    }

    @Override
    public void onMapViewMoveFinished(MapView mapView, MapPoint mapPoint) {

    }
}
